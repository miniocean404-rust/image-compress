# configuration file for git-cliff (0.1.0)

[changelog]
header = """
# Changelog
"""
# template for the changelog body
# https://tera.netlify.app/docs/#introduction
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits
    | filter(attribute="scope")
    | sort(attribute="scope") %}
        \n
        - **({{commit.scope}})** {{ commit.message | upper_first }} ([{{ commit.id | truncate(length=7, end="") }}](https://github.com/miniocean404-rust/image-compress/commit/{{ commit.id }}))
        {%- if commit.breaking %}
        {% raw %}  {% endraw %}- **BREAKING**: {{commit.breaking_description}}
        {%- endif -%}
    {%- endfor -%}
    \n\n
    {%- for commit in commits %}
        {%- if commit.scope -%}
        {% else %}
            \n
            - {{ commit.message | upper_first }} ([{{ commit.id | truncate(length=7, end="") }}](https://github.com/miniocean404-rust/image-compress/commit/{{ commit.id }}))
            {%- if commit.breaking %}
            {% raw %}  {% endraw %}- **BREAKING**: {{commit.breaking_description}}
            {%- endif -%}
        {% endif -%}
    {% endfor -%}
    {% raw %}\n{% endraw %}\
{% endfor %}\n
"""
# 从模板中删除前导和尾随空格
trim = true
# changelog footer
footer = """
<!-- generated by git-cliff -->
"""

[git]
# 只允许常规提交
# https://www.conventionalcommits.org
conventional_commits = true
filter_unconventional = false

commit_preprocessors = [
    { pattern = "\\(#([0-9]+)\\)", replace = "([#${1}](https://github.com/miniocean404-rust/image-compress/issues/${1}))" },
]
# 用于解析和分组提交的正则表达式
# commit_parsers = [
#     { message = "^feat", group = "Features" },
#     { message = "^fix", group = "Bug Fixes" },
#     { message = "^doc", group = "Documentation" },
#     { message = "^perf", group = "Performance" },
#     { message = "^refactor", group = "Refactor" },
#     { message = "^style", group = "Styling" },
#     { message = "^test", group = "Testing" },
#     { message = "^chore: Publish", skip = true },
#     { message = "^chore:", skip = true },
#     { message = "^chore\\(ci\\):", skip = true },
#     { message = "^chore\\(xtask\\):", skip = true },
#     { message = "^chore", group = "Miscellaneous Tasks" },
#     { body = ".*security", group = "Security" },
# ]
# 是否过滤掉提交解析器不匹配的提交
filter_commits = false
# 用于匹配 git 标签的 Glob 模式
ignore_tags = "nightly"
limit_commits = 1000
tag_pattern = "v[0-9]*"
