[package]
name = "image_compress_core"
version = "0.1.0"
edition = "2021"

[features]
default = ["wasm", "native"]
wasm = ["mem", "png"]
native = ["jpeg", "webp", "gif", "tiff", "avif"]
transform = []
metadata = []
mem = []

png = ["dep:oxipng", "dep:imagequant", "dep:lodepng", "dep:png"]
webp = ["dep:webp"]
jpeg = ["dep:mozjpeg", "dep:mozjpeg-sys"]
gif = ["dep:gifsicle", "dep:gif"]
avif = ["dep:libavif", "dep:ravif"]
tiff = ["dep:tiff"]

[dependencies]
# utils = { path = "../utils" }
# tokio = { workspace = true, default-features = false, features = [
#     "rt-multi-thread",
#     "rt",
# ] }


serde.workspace = true
serde_json.workspace = true
chrono.workspace = true
anyhow.workspace = true
thiserror.workspace = true
tracing.workspace = true
tracing-appender.workspace = true
tracing-subscriber.workspace = true
infer.workspace = true
globset.workspace = true
walkdir.workspace = true
num_cpus.workspace = true

image = { version = "=0.25.2" }
zune-core = "0.5.0-rc2"
zune-image = { version = "0.5.0-rc0", default-features = false }

rgb = "0.8.37"
resize = "0.8.5"

# PNG
oxipng = { version = "9.1.2", default-features = false, features = [
    "freestanding",
    "filetime",
    "parallel",
    "zopfli",
], optional = true } # 无损压缩 png (optipng、oxipng) 编译 wasm 需要安装 clang 环境
imagequant = { version = "4.3.1", default-features = true, optional = true } # 有损压缩 png 把 png24 压缩成 png8 的库 是 pngquant 的包装
lodepng = { version = "3.10.4", default-features = false, features = [
    "rust_backend",
    "deprecated_back_compat_error_type",
], optional = true } # wasm 需要禁止 ffi
png = { version = "0.17.11", optional = true }

# JPEG
mozjpeg = { version = "0.10.9", default-features = false, features = [
    "with_simd",
], optional = true }
mozjpeg-sys = { version = "2.2.1", features = ["default"], optional = true }

# Gif
gif = { version = "0.13.1", optional = true }      # gif 编码解码器
gifsicle = { version = "1.94.0", optional = true } # gifsicle 是读取以及 有损及无损压缩 gif 的库
libc = "0.2.155"

# WEBP
webp = { version = "0.3.0", default-features = false, optional = true } # 底层使用的是 rust libwebp-sys# webp 无损压缩及有损压缩

# AVIF
ravif = { version = "0.11.10", default-features = false, features = [
    "threading",
], optional = true }
libavif = { version = "0.14.0", default-features = false, features = [
    "codec-aom",
], optional = true }

# TIFF
tiff = { version = "0.9.1", default-features = false, optional = true }

# 处理 svg
svgtypes = "0.15.1"

[dev-dependencies]
zune-core = { version = "0.5.0-rc2", features = ["std"] }
zune-image = "0.5.0-rc0"
cargo_metadata.workspace = true
